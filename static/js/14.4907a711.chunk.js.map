{"version":3,"sources":["app/layouts/ArkPage/ArkPage.tsx","app/views/ark/NftView/components/SellDialog/checkmark.svg","app/views/ark/NftView/components/SellDialog/SellDialog.tsx"],"names":["useStyles","makeStyles","theme","root","flex","padding","spacing","breakpoints","down","ArkPage","props","children","classes","Box","className","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCheckmark","_ref","svgRef","title","titleId","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","container","maxWidth","display","contentBox","flexDirection","nftBox","marginLeft","nftCard","description","marginBottom","textTransform","label","fontSize","color","palette","type","fontWeight","overflowX","instruction","margin","opacity","up","saleTypeButton","borderRadius","backgroundColor","flexGrow","outline","border","cursor","saleTypeButtonSelected","actionButton","marginTop","feeLabel","feeValue","dialogRoot","fontFamily","top","right","position","dialogContent","background","default","borderLeft","borderRight","borderBottom","dialogButton","progress","step","alignItems","justifyContent","marginRight","minWidth","stepLabel","stepActive","stepCompleted","stepBar","left","backgroundImage","zIndex","stepBarFirstStepCompleted","stepBarCompleted","breakWord","wordBreak","SellDialog","rest","network","useSelector","getBlockchain","wallet","getWallet","tokenState","getTokens","exchangeInfo","getMarketplace","valueCalculators","useValueCalculators","match","useRouteMatch","useState","open","setOpen","expiry","setExpiry","useAsyncTask","runConfirmSell","loading","error","runGetNFTDetails","token","setToken","waitingForApprove","setWaitingForApprove","toaster","useToaster","saleType","sellToken","tokens","ZIL_ADDRESS","buyNowPrice","startingPrice","reservePrice","inputValues","setInputValues","hasApproved","setHasApproved","hasPosted","setHasPosted","history","useHistory","collectionId","params","collection","tokenId","isOwnToken","useMemo","owner","address","addressInfo","byte20","toLowerCase","useEffect","getNFTDetails","bypass","a","arkClient","ArkClient","fromBech32Address","viewerAddress","toLocaleLowerCase","getNftToken","result","model","onCurrencyChange","onPriceChange","rawAmount","onEndEditPrice","bidAmount","BigNumber","decimalPlaces","decimals","isNaN","isNegative","isFinite","sellUsdValue","BN_ZERO","input","bnOrZero","shiftedBy","usd","toString","Container","cls","Typography","variant","InputLabel","shrink","focused","FormHelperText","amount","tokenList","hideBalance","onEditorBlur","onAmountChange","value","align","toHumanNumber","onExpiryChange","expiryBlock","baseFeeBps","royaltyBps","message","disabled","gt","onClick","provider","priceAmount","price","bestAsk","gte","priceToken","existingPriceHuman","Error","toFormat","symbol","totalFeeBps","plus","feeAmount","times","dividedToIntegerBy","walletAddress","hexTokenAddress","approveAllowanceIfRequired","ZilswapConnector","getSDK","transaction","hash","waitForTx","nonce","Math","random","arkMessage","arkChequeHash","side","sign","signature","publicKey","postTrade","collectionAddress","logger","push","walletRequired","dialog","header","onClose","DialogContent","CircularProgress"],"mappings":"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","file":"static/js/14.4907a711.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\nimport { AppTheme } from \"app/theme/types\";\r\n\r\nconst useStyles = makeStyles((theme: AppTheme) => ({\r\n  root: {\r\n    flex: 1,\r\n    padding: theme.spacing(8, 0, 2),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: theme.spacing(6, 0, 2),\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: theme.spacing(6, 2, 2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ArkPage: React.FC<React.HTMLAttributes<HTMLDivElement>> = (\r\n  props: any\r\n) => {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n\r\n  return <Box className={classes.root}>{children}</Box>;\r\n};\r\n\r\nexport default ArkPage;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheckmark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6663 5L7.49967 14.1667L3.33301 10\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckmark);\nexport default __webpack_public_path__ + \"static/media/checkmark.5e449094.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Box, Container, FormHelperText, InputLabel, Typography, DialogContent, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fromBech32Address } from \"@zilliqa-js/zilliqa\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport cls from \"classnames\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { BN_ZERO } from \"tradehub-api-js/build/main/lib/tradehub/utils\";\r\nimport { ArkExpiry, ArkNFTCard, CurrencyInput, DialogModal, FancyButton, Text } from \"app/components\";\r\nimport ArkPage from \"app/layouts/ArkPage\";\r\nimport { getBlockchain, getWallet, getTokens, getMarketplace } from \"app/saga/selectors\";\r\nimport { Nft, TokenInfo } from \"app/store/types\";\r\nimport { AppTheme } from \"app/theme/types\";\r\nimport { useAsyncTask, bnOrZero, useToaster, useValueCalculators, toHumanNumber } from \"app/utils\";\r\nimport { ArkClient, logger, waitForTx } from \"core/utilities\";\r\nimport { ZilswapConnector } from \"core/zilswap\";\r\nimport { ZIL_ADDRESS } from \"app/utils/constants\";\r\nimport { ReactComponent as Checkmark } from \"./checkmark.svg\";\r\n\r\ninterface SellForm {\r\n  description: string,\r\n  saleType: \"fixed_price\" | \"timed_auction\",\r\n  sellToken: TokenInfo,\r\n  buyNowPrice: string,\r\n  startingPrice: string,\r\n  reservePrice: string,\r\n};\r\n\r\nconst SellDialog: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props: any) => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { network } = useSelector(getBlockchain);\r\n  const { wallet } = useSelector(getWallet);\r\n  const tokenState = useSelector(getTokens);\r\n  const { exchangeInfo } = useSelector(getMarketplace);\r\n  const valueCalculators = useValueCalculators();\r\n  const match = useRouteMatch<{ id: string, collection: string }>();\r\n  const [open, setOpen] = useState(false)\r\n  const [expiry, setExpiry] = useState(0)\r\n  const [runConfirmSell, loading, error] = useAsyncTask(\"confirmSell\", () => setOpen(false));\r\n  const [runGetNFTDetails] = useAsyncTask(\"runGetNFTDetails\");\r\n  const [token, setToken] = useState<Nft>();\r\n  const [waitingForApprove, setWaitingForApprove] = useState(false);\r\n  const toaster = useToaster();\r\n  // const [errors, setErrors] = useState({\r\n  //   description: \"\",\r\n  // })\r\n  const [inputValues, setInputValues] = useState<SellForm>({\r\n    description: \"\",\r\n    saleType: \"fixed_price\",\r\n    sellToken: tokenState.tokens[ZIL_ADDRESS],\r\n    buyNowPrice: \"0\",\r\n    startingPrice: \"0\",\r\n    reservePrice: \"0\",\r\n  });\r\n  const [hasApproved, setHasApproved] = useState(false)\r\n  const [hasPosted, setHasPosted] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const collectionId = match.params.collection;\r\n  const tokenId = match.params.id;\r\n\r\n  const isOwnToken = useMemo(() => {\r\n    return token?.owner?.address && wallet?.addressInfo.byte20?.toLowerCase() === token?.owner?.address;\r\n  }, [token, wallet?.addressInfo]);\r\n\r\n  useEffect(() => {\r\n    if (wallet) {\r\n      getNFTDetails();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [wallet])\r\n\r\n  const getNFTDetails = (bypass?: boolean) => {\r\n    runGetNFTDetails(async () => {\r\n      const arkClient = new ArkClient(network);\r\n      const address = fromBech32Address(collectionId).toLowerCase()\r\n      const viewerAddress = wallet?.addressInfo.byte20.toLocaleLowerCase()\r\n      const { result } = await arkClient.getNftToken(address, tokenId, viewerAddress);\r\n      setToken(result.model);\r\n    })\r\n  }\r\n\r\n  // const updateInputs = (type: string) => {\r\n  //   return (newInput: string) => {\r\n  //     setInputValues({\r\n  //       ...inputValues,\r\n  //       [type]: newInput\r\n  //     })\r\n  //     if (!newInput) {\r\n  //       return setErrors({\r\n  //         ...errors, [type]: \"\"\r\n  //       })\r\n  //     }\r\n  //     const errorText = validateInput(type, newInput)\r\n\r\n  //     setErrors({\r\n  //       ...errors, [type]: errorText\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // const validateInput = (type: string, input: string) => {\r\n  //   switch (type) {\r\n  //     case \"description\":\r\n  //       if (input.length > 300) return \"max 300 characters\";\r\n  //       return \"\"\r\n  //     default: return \"false\";\r\n  //   }\r\n  // }\r\n\r\n  const onCurrencyChange = (token: TokenInfo) => {\r\n    setInputValues({\r\n      ...inputValues,\r\n      sellToken: token\r\n    })\r\n  };\r\n\r\n  const onPriceChange = (type: string, rawAmount: string = \"0\") => {\r\n    setInputValues({\r\n      ...inputValues,\r\n      [type]: rawAmount\r\n    })\r\n  };\r\n\r\n  const onEndEditPrice = (type: keyof Pick<SellForm, \"buyNowPrice\" | \"reservePrice\" | \"startingPrice\">) => {\r\n    let bidAmount = new BigNumber(inputValues[type]).decimalPlaces(\r\n      inputValues.sellToken?.decimals ?? 0\r\n    );\r\n    if (bidAmount.isNaN() || bidAmount.isNegative() || !bidAmount.isFinite())\r\n      setInputValues({\r\n        ...inputValues,\r\n        [type]: \"0\"\r\n      })\r\n  };\r\n\r\n  const onExpiryChange = (expiryBlock: number) => {\r\n    setExpiry(expiryBlock)\r\n  }\r\n\r\n  const onCloseDialog = () => {\r\n    if (loading) return;\r\n    setOpen(false);\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    if (!wallet?.provider || !match.params?.collection || !match.params?.id || !inputValues.sellToken || inputValues.buyNowPrice === \"0\" || !exchangeInfo) return;\r\n    runConfirmSell(async () => {\r\n      const { collection: address, id } = match.params;\r\n\r\n      const priceAmount = new BigNumber(inputValues.buyNowPrice).shiftedBy(inputValues.sellToken.decimals);\r\n      const price = { amount: priceAmount, address: fromBech32Address(inputValues.sellToken.address) };\r\n\r\n      if (price.address === token?.bestAsk?.price.address && price.amount.gte(token.bestAsk.price.amount)) {\r\n        const priceToken = tokenState.tokens[inputValues.sellToken.address];\r\n        const decimals = priceToken?.decimals ?? 0;\r\n        const existingPriceHuman = bnOrZero(token.bestAsk.price.amount).decimalPlaces(0).shiftedBy(-decimals);\r\n        throw new Error(`Selling price should be lower than existing price of ${existingPriceHuman.toFormat()} ${priceToken?.symbol}`)\r\n      }\r\n\r\n      if (typeof token?.collection?.royaltyBps !== \"number\")\r\n        throw new Error(\"Could not retrieve collection information\");\r\n\r\n      const totalFeeBps = bnOrZero(exchangeInfo.baseFeeBps).plus(token.collection.royaltyBps);\r\n      const feeAmount = priceAmount.times(totalFeeBps).dividedToIntegerBy(10000).plus(1);\r\n\r\n      setOpen(true)\r\n      const arkClient = new ArkClient(network);\r\n\r\n      const walletAddress = wallet.addressInfo.byte20.toLowerCase();\r\n      const hexTokenAddress = fromBech32Address(address).toLowerCase();\r\n      const transaction = await arkClient.approveAllowanceIfRequired(hexTokenAddress, walletAddress, ZilswapConnector.getSDK());\r\n\r\n      if (transaction?.id) {\r\n        toaster(\"Approve TX Submitted\", { hash: transaction.id });\r\n        setWaitingForApprove(true);\r\n\r\n        try {\r\n          await waitForTx(transaction.id);\r\n          setHasApproved(true);\r\n        } finally {\r\n          setWaitingForApprove(false);\r\n        }\r\n      }\r\n\r\n      const nonce = new BigNumber(Math.random()).times(2147483647).decimalPlaces(0).toString(10); // int32 max 2147483647\r\n      const message = arkClient.arkMessage(\"Execute\", arkClient.arkChequeHash({\r\n        side: \"Sell\",\r\n        token: { address, id, },\r\n        price,\r\n        feeAmount,\r\n        expiry,\r\n        nonce,\r\n      }))\r\n\r\n      const { signature, publicKey } = (await wallet.provider!.wallet.sign(message as any)) as any\r\n\r\n      const result = await arkClient.postTrade({\r\n        publicKey,\r\n        signature,\r\n\r\n        collectionAddress: address,\r\n        address: wallet.addressInfo.byte20.toLowerCase(),\r\n        tokenId: id,\r\n        side: \"Sell\",\r\n        expiry,\r\n        nonce,\r\n        price,\r\n      });\r\n\r\n      logger(\"post trade\", result);\r\n      setHasPosted(true);\r\n      toaster(`Successfully listed token #${id}!`);\r\n      history.push(`/arky/collections/${collectionId}/${tokenId}`)\r\n    });\r\n  };\r\n\r\n  const sellUsdValue = useMemo(() => {\r\n    if (!inputValues.sellToken) return BN_ZERO;\r\n    const input = bnOrZero(inputValues.buyNowPrice).shiftedBy(inputValues.sellToken.decimals);\r\n\r\n    return valueCalculators.usd(tokenState, inputValues.sellToken.address, input.toString(10));\r\n  }, [inputValues, valueCalculators, tokenState])\r\n\r\n  if (!isOwnToken) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <ArkPage {...rest}>\r\n      <Container className={cls(classes.root, className)}>\r\n        <Box className={classes.container}>\r\n          <Box justifyContent=\"flex-start\" marginBottom={4}>\r\n            <Typography variant=\"h1\">Sell</Typography>\r\n          </Box>\r\n          <Box className={classes.contentBox}>\r\n            <Box>\r\n              {/* <Box className={classes.description}>\r\n                <ArkInput\r\n                  placeholder=\"eg. This NFT was owned by an NBA player\" error={errors.description} value={inputValues.description}\r\n                  label=\"Additional description\" onValueChange={(value) => updateInputs(\"description\")(value)} multiline={true}\r\n                />\r\n              </Box> */}\r\n\r\n              {/* <Box display=\"flex\" flexDirection=\"column\" marginTop={2}>\r\n                <InputLabel shrink focused={false} className={cls({ [classes.label]: true })}>\r\n                  Sell type\r\n                </InputLabel>\r\n                <FormHelperText className={classes.instruction}>By default, all Fixed Price listings are set to open to bids.</FormHelperText>\r\n                <Box display=\"grid\" gridTemplateColumns=\"repeat(2, minmax(0, 1fr))\" gridGap={8} marginTop={1}>\r\n                  <button\r\n                    className={cls(classes.saleTypeButton, {\r\n                      [classes.saleTypeButtonSelected]: inputValues.saleType === \"fixed_price\"\r\n                    })}\r\n                    onClick={() => setInputValues({\r\n                      ...inputValues,\r\n                      saleType: \"fixed_price\"\r\n                    })}\r\n                  >Fixed Price</button>\r\n                  <button\r\n                    className={cls(classes.saleTypeButton, {\r\n                      [classes.saleTypeButtonSelected]: inputValues.saleType === \"timed_auction\"\r\n                    })}\r\n                    onClick={() => setInputValues({\r\n                      ...inputValues,\r\n                      saleType: \"timed_auction\"\r\n                    })}\r\n                  >Timed Auction</button>\r\n                </Box>\r\n              </Box> */}\r\n\r\n              {inputValues.saleType === \"fixed_price\" &&\r\n                <Box display=\"flex\" flexDirection=\"column\" marginTop={2}>\r\n                  <InputLabel shrink focused={false} className={cls({ [classes.label]: true })}>\r\n                    Buy Now Price\r\n                  </InputLabel>\r\n                  <FormHelperText className={classes.instruction}>Transactions will be made automatically once the buyer hits \"Confirm\".</FormHelperText>\r\n                  <Box marginTop={1}>\r\n                    <CurrencyInput\r\n                      token={inputValues.sellToken ?? null}\r\n                      amount={inputValues.buyNowPrice}\r\n                      tokenList=\"ark-zil\"\r\n                      hideBalance\r\n                      onEditorBlur={() => onEndEditPrice('buyNowPrice')}\r\n                      onAmountChange={value => onPriceChange('buyNowPrice', value)}\r\n                      onCurrencyChange={onCurrencyChange}\r\n                    />\r\n                  </Box>\r\n                  <Text variant=\"body2\" align=\"left\" marginTop={1} marginLeft={2}>\r\n                    ≈ ${toHumanNumber(sellUsdValue, 2)}\r\n                  </Text>\r\n                </Box>\r\n              }\r\n\r\n              {inputValues.saleType === \"timed_auction\" &&\r\n                <>\r\n                  <Box display=\"flex\" flexDirection=\"column\" marginTop={4}>\r\n                    <InputLabel shrink focused={false} className={cls({ [classes.label]: true })}>\r\n                      Starting Price\r\n                    </InputLabel>\r\n                    <FormHelperText className={classes.instruction}>Set a minimum bid XXXXXXXXX</FormHelperText>\r\n                    <Box marginTop={1}>\r\n                      <CurrencyInput\r\n                        token={inputValues.sellToken ?? null}\r\n                        amount={inputValues.buyNowPrice}\r\n                        onEditorBlur={() => onEndEditPrice('startingPrice')}\r\n                        onAmountChange={value => onPriceChange('startingPrice', value)}\r\n                        onCurrencyChange={onCurrencyChange}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box display=\"flex\" flexDirection=\"column\" marginTop={4}>\r\n                    <InputLabel shrink focused={false} className={cls({ [classes.label]: true })}>\r\n                      Reserve Price\r\n                    </InputLabel>\r\n                    <FormHelperText className={classes.instruction}>If no bid hits the reserve price, your auction will close without a sale.</FormHelperText>\r\n                    <Box marginTop={1}>\r\n                      <CurrencyInput\r\n                        label=\"Reserve Price\"\r\n                        token={inputValues.sellToken ?? null}\r\n                        amount={inputValues.buyNowPrice}\r\n                        onEditorBlur={() => onEndEditPrice('reservePrice')}\r\n                        onAmountChange={value => onPriceChange('reservePrice', value)}\r\n                        onCurrencyChange={onCurrencyChange}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box display=\"flex\" flexDirection=\"column\" marginTop={4}>\r\n                    <InputLabel shrink focused={false} className={cls({ [classes.label]: true })}>\r\n                      End Auction On\r\n                    </InputLabel>\r\n                    <FormHelperText className={classes.instruction}>Choose when to end your timed auction.</FormHelperText>\r\n                  </Box>\r\n                </>\r\n              }\r\n\r\n              <ArkExpiry label=\"Offer Expiry\" onExpiryChange={onExpiryChange} />\r\n\r\n              <Box display=\"flex\" flexDirection=\"column\" marginTop={4}>\r\n                <InputLabel shrink focused={false} className={cls({ [classes.label]: true })}>\r\n                  Fees\r\n                </InputLabel>\r\n                <FormHelperText className={classes.instruction}>The following fees will be deducted once this NFT is sold.</FormHelperText>\r\n                {exchangeInfo?.baseFeeBps && (\r\n                  <Box display=\"flex\" marginTop={1}>\r\n                    <Typography className={classes.feeLabel}>Service Fee</Typography>\r\n                    <Typography className={classes.feeValue}>{exchangeInfo.baseFeeBps / 100}%</Typography>\r\n                  </Box>\r\n                )}\r\n                {token?.collection && token.collection.royaltyBps !== null &&\r\n                  <Box display=\"flex\" marginTop={1}>\r\n                    <Typography className={classes.feeLabel}>Royalties</Typography>\r\n                    <Typography className={classes.feeValue}>{new BigNumber(token.collection.royaltyBps).shiftedBy(-2).toString()}%</Typography>\r\n                  </Box>\r\n                }\r\n              </Box>\r\n\r\n              {error && (\r\n                <Text marginTop={2} className={classes.breakWord} color=\"error\" >Error: {error?.message ?? \"Unknown error\"}</Text>\r\n              )}\r\n              <FancyButton\r\n                className={classes.actionButton}\r\n                loading={loading}\r\n                disabled={!new BigNumber(inputValues.buyNowPrice).gt(0)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={onConfirm}\r\n                walletRequired\r\n              >\r\n                Sell NFT\r\n              </FancyButton>\r\n            </Box>\r\n            <Box className={classes.nftBox}>\r\n              {token &&\r\n                <ArkNFTCard\r\n                  className={classes.nftCard}\r\n                  token={token}\r\n                  collectionAddress={fromBech32Address(collectionId).toLowerCase()}\r\n                  dialog={true}\r\n                />\r\n              }\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <DialogModal\r\n          className={classes.dialogRoot}\r\n          header=\"Complete Listing\"\r\n          open={open}\r\n          onClose={onCloseDialog}\r\n        >\r\n          <DialogContent className={classes.dialogContent}>\r\n            <Box display=\"flex\" flexDirection=\"column\">\r\n              <Box display=\"flex\" alignItems=\"center\" marginBottom={4} position=\"relative\">\r\n                <Box className={cls(classes.stepBar, {\r\n                  [classes.stepBarFirstStepCompleted]: hasApproved,\r\n                  [classes.stepBarCompleted]: hasApproved && hasPosted\r\n                })}></Box>\r\n                <Box className={cls(classes.step, {\r\n                  [classes.stepActive]: !hasApproved,\r\n                  [classes.stepCompleted]: hasApproved\r\n                })}>\r\n                  {hasApproved ? (\r\n                    <Checkmark />\r\n                  ) : (\r\n                    <>1</>\r\n                  )}\r\n                  {waitingForApprove && (\r\n                    <CircularProgress className={classes.progress} color=\"inherit\" />\r\n                  )}\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"stretch\">\r\n                  <Text className={classes.stepLabel}>Approve Token</Text>\r\n                  <Text>Approve once, and never again. This step approves the token for trading and involves a one-off gas fee.</Text>\r\n                </Box>\r\n              </Box>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Box className={cls(classes.step, {\r\n                  [classes.stepActive]: !hasPosted && hasApproved,\r\n                  [classes.stepCompleted]: hasPosted\r\n                })}>\r\n                  {hasPosted ? (\r\n                    <Checkmark />\r\n                  ) : (\r\n                    <>2</>\r\n                  )}\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"stretch\">\r\n                  <Text className={classes.stepLabel}>Confirm Listing</Text>\r\n                  <Text>Accept the signature request on your wallet so that we can begin processing your request.</Text>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </DialogContent>\r\n        </DialogModal>\r\n      </Container>\r\n    </ArkPage>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: AppTheme) => ({\r\n  root: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: 0\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  container: {\r\n    maxWidth: \"680px\",\r\n    width: \"100%\",\r\n    display: \"row\",\r\n  },\r\n  contentBox: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      flexDirection: \"column-reverse\"\r\n    }\r\n  },\r\n  nftBox: {\r\n    marginLeft: theme.spacing(6),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      marginLeft: 0,\r\n    }\r\n  },\r\n  nftCard: {\r\n    maxWidth: \"none\",\r\n  },\r\n  description: {\r\n    \"& .MuiTypography-root\": {\r\n      marginBottom: 6,\r\n      textTransform: \"uppercase\"\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      height: \"80px !important\"\r\n    }\r\n  },\r\n  label: {\r\n    fontSize: \"18px\",\r\n    color: theme.palette.type === \"dark\" ? \"#DEFFFF\" : \"#0D1B24\",\r\n    fontWeight: \"bold\",\r\n    width: 150,\r\n    overflowX: \"visible\",\r\n    textTransform: \"uppercase\",\r\n    marginBottom: 1,\r\n  },\r\n  instruction: {\r\n    color: theme.palette.type === \"dark\" ? \"#DEFFFF\" : \"#0D1B24\",\r\n    fontSize: 12,\r\n    margin: 0,\r\n    opacity: 0.5,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 400,\r\n    }\r\n  },\r\n  saleTypeButton: {\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    backgroundColor: \"rgba(255,255,255,0.1)\",\r\n    flexGrow: 1,\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    color: theme.palette.type === \"dark\" ? \"#DEFFFF\" : \"#0D1B24\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\"\r\n  },\r\n  saleTypeButtonSelected: {\r\n    backgroundColor: \"#00FFB0\",\r\n    color: \"#003340\",\r\n  },\r\n  actionButton: {\r\n    height: 58,\r\n    marginTop: 24\r\n  },\r\n  feeLabel: {\r\n    fontWeight: \"bold\",\r\n    flexGrow: 1,\r\n    fontSize: \"14px\"\r\n  },\r\n  feeValue: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"14px\"\r\n  },\r\n  dialogRoot: {\r\n    \"& .MuiDialogTitle-root\": {\r\n      padding: theme.spacing(4.5, 4.5, 5),\r\n      \"& .MuiTypography-root\": {\r\n        fontFamily: \"'Raleway', sans-serif\",\r\n        fontWeight: 700,\r\n        fontSize: \"24px\",\r\n      },\r\n      \"& .MuiSvgIcon-root\": {\r\n        fontSize: \"1.8rem\",\r\n      },\r\n      \"& .MuiIconButton-root\": {\r\n        top: \"21px\",\r\n        right: \"21px\",\r\n      },\r\n    },\r\n    position: \"relative\",\r\n\r\n  },\r\n  dialogContent: {\r\n    backgroundColor: theme.palette.background.default,\r\n    borderLeft:\r\n      theme.palette.border,\r\n    borderRight:\r\n      theme.palette.border,\r\n    borderBottom:\r\n      theme.palette.border,\r\n    borderRadius: \"0 0 12px 12px\",\r\n    padding: theme.spacing(0, 4.5, 5),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 436,\r\n    }\r\n  },\r\n  dialogButton: {\r\n    height: 42,\r\n    marginTop: 6\r\n  },\r\n  progress: {\r\n    position: \"absolute\",\r\n  },\r\n  step: {\r\n    width: 110,\r\n    height: 52,\r\n    borderRadius: 26,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#223139\",\r\n    marginRight: 24,\r\n    position: \"relative\",\r\n    maxWidth: 54.5,\r\n    minWidth: 53.75,\r\n  },\r\n  stepLabel: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 14,\r\n    marginBottom: 2\r\n  },\r\n  stepActive: {\r\n    backgroundColor: \"#6BE1FF\",\r\n    color: \"#003340\"\r\n  },\r\n  stepCompleted: {\r\n    backgroundColor: \"#00FFB0\",\r\n    color: \"#003340\"\r\n  },\r\n  stepBar: {\r\n    position: \"absolute\",\r\n    top: 50,\r\n    left: 25,\r\n    height: 44,\r\n    width: 6,\r\n    backgroundColor: \"#223139\",\r\n    backgroundImage: \"linear-gradient(#6BE1FF, #223139)\",\r\n    zIndex: 0,\r\n  },\r\n  stepBarFirstStepCompleted: {\r\n    backgroundImage: \"linear-gradient(#00FFB0, #6BE1FF)\",\r\n  },\r\n  stepBarCompleted: {\r\n    backgroundImage: \"linear-gradient(#00FFB0, #00FFB0)\",\r\n  },\r\n  breakWord: {\r\n    wordBreak: \"break-word\"\r\n  },\r\n}));\r\n\r\nexport default SellDialog;\r\n"],"sourceRoot":""}