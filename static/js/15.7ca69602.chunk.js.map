{"version":3,"sources":["app/layouts/ILOPage/ILOPage.tsx","app/views/ilo/Current/Current.tsx"],"names":["CustomRouterLink","forwardRef","props","ref","style","flexGrow","flexBasis","useStyles","makeStyles","theme","root","flex","padding","spacing","breakpoints","down","tabs","display","width","maxWidth","tab","position","paddingTop","paddingBottom","marginBottom","borderRadius","backgroundColor","palette","disabledBackground","color","disabled","active","selected","tabCornerLeft","borderTopRightRadius","borderBottomRightRadius","border","tabCornerRight","borderTopLeftRadius","borderBottomLeftRadius","borderWidth","tabActive","tabNoticeOpposite","borderBottom","background","paperOpposite","ILOPage","children","classes","Box","className","justifyContent","Button","disableElevation","variant","cls","activeClassName","component","to","container","secondaryText","marginTop","link","textDecoration","CurrentView","rest","network","useNetwork","walletState","useSelector","state","wallet","useBlockTime","blockTime","currentBlock","currentTime","ziloData","useMemo","ZILO_DATA","filter","x","isBefore","showUntil","useEffect","length","flexDirection","textAlign","mb","map","data","comingSoon","expanded","contractAddress","TokenILOCard"],"mappings":"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","file":"static/js/15.7ca69602.chunk.js","sourcesContent":["import React, { forwardRef } from 'react'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport { PaperProps } from 'material-ui';\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport cls from \"classnames\";\r\nimport { AppTheme } from 'app/theme/types'\r\n\r\nconst CustomRouterLink = forwardRef((props: any, ref: any) => (\r\n  <div ref={ref} style={{ flexGrow: 1, flexBasis: 1 }} >\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst useStyles = makeStyles((theme: AppTheme) => ({\r\n  root: {\r\n    flex: 1,\r\n    padding: theme.spacing(8, 0, 2),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: theme.spacing(6, 0, 2),\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: theme.spacing(6, 2, 2),\r\n    },\r\n  },\r\n  tabs: {\r\n    display: \"flex\",\r\n    width: \"488px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: 450,\r\n    },\r\n  },\r\n  tab: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    marginBottom: theme.spacing(3),\r\n    borderRadius: 12,\r\n    backgroundColor: theme.palette.tab.disabledBackground,\r\n    color: theme.palette.tab.disabled,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.tab.active,\r\n      color: theme.palette.tab.selected\r\n    }\r\n  },\r\n  tabCornerLeft: {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    border: theme.palette.border,\r\n  },\r\n  tabCornerRight: {\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n    border: theme.palette.border,\r\n    borderWidth: \"1px 1px 1px 0\",\r\n  },\r\n  tabActive: {\r\n    backgroundColor: theme.palette.tab.active,\r\n    color: theme.palette.tab.selected,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.tab.active,\r\n      color: theme.palette.tab.selected,\r\n    },\r\n  },\r\n  tabNoticeOpposite: {\r\n    \"&:after\": {\r\n      borderBottom: `8px solid ${theme.palette.background.paperOpposite!}`,\r\n    }\r\n  },\r\n}))\r\n\r\nconst ILOPage: React.FC<PaperProps> = (props: PaperProps) => {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box display=\"flex\" justifyContent=\"center\" marginBottom=\"2em\">\r\n        <Box className={classes.tabs}>\r\n          <Button\r\n            disableElevation\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            className={cls(classes.tab, classes.tabCornerLeft)}\r\n            activeClassName={cls(classes.tabActive)}\r\n            component={CustomRouterLink}\r\n            to=\"/zilo/current\">Current</Button>\r\n          <Button\r\n            disableElevation\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            className={cls(classes.tab, classes.tabCornerRight)}\r\n            activeClassName={cls(classes.tabActive)}\r\n            component={CustomRouterLink}\r\n            to=\"/zilo/past\">Past</Button>\r\n        </Box>\r\n      </Box>\r\n      {children}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ILOPage;\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ZILO_DATA } from 'core/zilo/constants';\r\nimport { ILOCard, SampleILOCard, Text } from \"app/components\";\r\nimport TokenILOCard from \"app/components/TokenILOCard\";\r\nimport ILOPage from 'app/layouts/ILOPage';\r\nimport { RootState, WalletState } from \"app/store/types\";\r\nimport { AppTheme } from \"app/theme/types\";\r\nimport { useNetwork, useBlockTime } from \"app/utils\";\r\n\r\nconst useStyles = makeStyles((theme: AppTheme) => ({\r\n  container: {\r\n    padding: theme.spacing(4, 4, 0),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: theme.spacing(4, 2, 0),\r\n    },\r\n  },\r\n  secondaryText: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  link: {\r\n    color: theme.palette.link,\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\"\r\n    }\r\n  }\r\n}))\r\n\r\nconst CurrentView: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props: any) => {\r\n  const { children, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const network = useNetwork();\r\n  const walletState = useSelector<RootState, WalletState>(state => state.wallet);\r\n  const [blockTime, currentBlock, currentTime] = useBlockTime();\r\n  const ziloData = useMemo(() => ZILO_DATA[network!].filter(x => currentTime.isBefore(x.showUntil)), [network, currentTime])\r\n\r\n\r\n  useEffect(() => {\r\n    // need to listen to wallet state\r\n    // to trigger react component reload\r\n    // when network changes.\r\n  }, [walletState]);\r\n\r\n  return (\r\n    <ILOPage {...rest}>\r\n      {\r\n        ziloData.length === 0 ?\r\n          <ILOCard>\r\n            <Box display=\"flex\" flexDirection=\"column\" className={classes.container} textAlign=\"center\" mb={4}>\r\n              <Text variant=\"h1\">No active listings.</Text>\r\n              <Text className={classes.secondaryText} color=\"textSecondary\">\r\n                Click <Link to=\"/zilo/past\" className={classes.link}>here</Link> to view past ILOs.\r\n              </Text>\r\n            </Box>\r\n          </ILOCard>\r\n          :\r\n          ziloData.map(data => (\r\n            data.comingSoon ? (\r\n              <ILOCard>\r\n                <SampleILOCard\r\n                  key={data.contractAddress}\r\n                  expanded={true}\r\n                  data={data}\r\n                  blockTime={blockTime}\r\n                  currentBlock={currentBlock}\r\n                  currentTime={currentTime}\r\n                />\r\n              </ILOCard>\r\n            ) : (\r\n              <ILOCard>\r\n                <TokenILOCard\r\n                  key={data.contractAddress}\r\n                  expanded={true}\r\n                  data={data}\r\n                  blockTime={blockTime}\r\n                  currentBlock={currentBlock}\r\n                  currentTime={currentTime}\r\n                />\r\n              </ILOCard>\r\n            )\r\n          ))\r\n      }\r\n    </ILOPage>\r\n  )\r\n}\r\n\r\nexport default CurrentView\r\n"],"sourceRoot":""}